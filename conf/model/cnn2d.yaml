defaults:
  - pipeline/default@_here_
  - _self_

x_sys:
  steps:
    - _target_: src.modules.transformation.eeg.clip.ClipEEG
      lower: -1024
      upper: 1024
    - _target_: src.modules.transformation.eeg.nantozero.NaNToZero

y_sys:
  steps:
    - _target_: src.modules.transformation.target.sum_to_one.SumToOne

train_sys:
  steps:
    - _target_: src.modules.training.main_trainer.MainTrainer
      model:
        _target_: src.modules.training.models.cnn2d.CNN2D
        in_channels: 4
        out_channels: 6
        model: # from segmentation_models_pytorch import Unet
          _target_: torchvision.models.efficientnet_b0
          pretrained: false
      optimizer: # Partially instantiate optimizer, so model parameters can be linked at runtime
        _target_: functools.partial
        _args_:
          - _target_: hydra.utils.get_class
            path: torch.optim.Adam
        lr: 0.0001
      criterion:
        _target_: src.modules.training.losses.kldiv.CustomKLDivLoss
        reduction: "batchmean"
      epochs: 5
      batch_size: 512
      patience: 10
      dataset:
        _target_: src.modules.training.datasets.main_dataset.MainDataset
        data_type: "kaggle_spec"
