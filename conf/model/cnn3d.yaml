defaults:
  - pipeline/default@_here_
  - _self_

x_sys:
  steps:
    - _target_: src.modules.transformation.clip.Clip
      lower: -1024
      upper: 1024
    - _target_: src.modules.transformation.nantozero.NaNToZero
      eeg: true
    - _target_: src.modules.transformation.eeg.divide.Divide
      value: 32
    - _target_: src.modules.transformation.eeg.butter.ButterFilter
      lower: 0.5
      upper: 20
      order: 2
    - _target_: src.modules.transformation.eeg.quantize.Quantizer
    - _target_: src.modules.transformation.eeg.downsample.Downsample
      downsample_factor: 10
#    - _target_: src.modules.transformation.eeg.rolling.Rolling
#      channels: [0, 2, 4, 6]
#      window_sizes: [20, 20, 20, 20]
#      operations: ["std", "std", "std", "std"]
#    - _target_: src.modules.transformation.eeg.select_channels.SelectChannels
#      channels: [8, 9, 10, 11, 12, 13, 14, 15] #Select the last 18 channels


y_sys:
  steps:
    - _target_: src.modules.transformation.target.sum_to_one.SumToOne

train_sys:
  steps:
    - _target_: src.modules.training.main_trainer.MainTrainer
      model_name: EEGNet # Can't have special characters or spaces
      model:
        _target_: src.modules.training.models.cnn3d.model.Model
        in_channels: 1
        out_channels: 6
        model_type: "efficientnet-b0"
      optimizer: # Partially instantiate optimizer, so model parameters can be linked at runtime
        _target_: functools.partial
        _args_:
          - _target_: hydra.utils.get_class
            path: torch.optim.AdamW
        lr: 0.001
        weight_decay: 1e-2
      criterion:
        _target_: src.modules.training.losses.kldiv_logits.CustomKLDivLogitsLoss
      epochs: 50
      batch_size: 64
      patience: 10
      dataset_args:
        data_type: "eeg"
        get_item_custom:
        subsample_method: "running_random"
        augmentations:
          _target_: torch_audiomentations.Compose
          transforms:
          - _target_: torch_audiomentations.Shift
            p: 0.5
            rollover: true
            mode: per_example
          - _target_: src.modules.training.augmentations.random_phase_shift.RandomPhaseShift
            p: 0.4
            shift_limit: 0.5
          - _target_: src.modules.training.augmentations.substract_channels.SubstractChannels
            p: 0.5
    - _target_: src.modules.training.postprocessing.softmax.Softmax
